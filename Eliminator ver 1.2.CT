<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="45">
  <CheatEntries>
    <CheatEntry>
      <ID>96</ID>
      <Description>"基于 dlsite 正版，对应可执行文件名为 "Eliminator ver 1.2.exe""</Description>
      <LastState Value="" RealAddress="00000000"/>
      <Color>FF0000</Color>
      <GroupHeader>1</GroupHeader>
    </CheatEntry>
    <CheatEntry>
      <ID>11</ID>
      <Description>"CP"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>"UnityPlayer.dll"+014E28B0</Address>
      <Offsets>
        <Offset>1B0</Offset>
        <Offset>68</Offset>
        <Offset>C0</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>3</ID>
      <Description>"INF AMMO"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Eliminator ver 1.2.exe
  Version: 
  Date   : 2025-01-13
  Author : Miuzarte

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,89 48 1C 48 8B 46 68) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  jmp return

code:
  mov [rax+1C],ecx
  mov rax,[rsi+68]
  jmp return

INJECT:
  jmp newmem
  nop 2
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db 89 48 1C 48 8B 46 68

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D62A1E2ABF

1D62A1E2A95: 48 8B CE                       - mov rcx,rsi
1D62A1E2A98: 33 D2                          - xor edx,edx
1D62A1E2A9A: 48 83 EC 20                    - sub rsp,20
1D62A1E2A9E: 49 BB 40 36 1E 2A D6 01 00 00  - mov r11,000001D62A1E3640
1D62A1E2AA8: 41 FF D3                       - call r11
1D62A1E2AAB: 48 83 C4 20                    - add rsp,20
1D62A1E2AAF: 48 8B 86 D0 00 00 00           - mov rax,[rsi+000000D0]
1D62A1E2AB6: 48 8B C8                       - mov rcx,rax
1D62A1E2AB9: 48 63 49 1C                    - movsxd  rcx,dword ptr [rcx+1C]
1D62A1E2ABD: FF C9                          - dec ecx
// ---------- INJECTING HERE ----------
1D62A1E2ABF: 89 48 1C                       - mov [rax+1C],ecx
// ---------- DONE INJECTING  ----------
1D62A1E2AC2: 48 8B 46 68                    - mov rax,[rsi+68]
1D62A1E2AC6: 48 63 50 18                    - movsxd  rdx,dword ptr [rax+18]
1D62A1E2ACA: 33 C9                          - xor ecx,ecx
1D62A1E2ACC: 48 83 EC 20                    - sub rsp,20
1D62A1E2AD0: 49 BB 30 95 6B 2F D6 01 00 00  - mov r11,000001D62F6B9530
1D62A1E2ADA: 41 FF D3                       - call r11
1D62A1E2ADD: 48 83 C4 20                    - add rsp,20
1D62A1E2AE1: 89 85 7C FE FF FF              - mov [rbp-00000184],eax
1D62A1E2AE7: 48 8B 86 80 00 00 00           - mov rax,[rsi+00000080]
1D62A1E2AEE: 48 8B CD                       - mov rcx,rbp
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2</ID>
      <Description>"AMMO"</Description>
      <VariableType>4 Bytes</VariableType>
      <Address>"UnityPlayer.dll"+01506C68</Address>
      <Offsets>
        <Offset>1C</Offset>
        <Offset>78</Offset>
        <Offset>28</Offset>
        <Offset>F0</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>14</ID>
      <Description>"GUN Grenades"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>4 Bytes</VariableType>
      <Address>"UnityPlayer.dll"+01506C68</Address>
      <Offsets>
        <Offset>28</Offset>
        <Offset>78</Offset>
        <Offset>28</Offset>
        <Offset>F0</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>7</ID>
      <Description>"NO DMG"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Eliminator ver 1.2.exe
  Version: 
  Date   : 2025-01-13
  Author : Miuzarte

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,F3 0F 11 A8 A4 00 00 00) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  jmp return

code:
  movss [rax+000000A4],xmm5
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 A8 A4 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 1D62A209F3B

1D62A209F0E: F2 0F 5A D2                    - cvtsd2ss xmm2,xmm2
1D62A209F12: F2 0F 5A C9                    - cvtsd2ss xmm1,xmm1
1D62A209F16: F2 0F 5A C0                    - cvtsd2ss xmm0,xmm0
1D62A209F1A: 48 83 EC 20                    - sub rsp,20
1D62A209F1E: 49 BB 40 73 6B 2F D6 01 00 00  - mov r11,000001D62F6B7340
1D62A209F28: 41 FF D3                       - call r11
1D62A209F2B: 48 83 C4 20                    - add rsp,20
1D62A209F2F: F3 0F 5A C0                    - cvtss2sd xmm0,xmm0
1D62A209F33: 48 8B 45 E8                    - mov rax,[rbp-18]
1D62A209F37: F2 0F 5A E8                    - cvtsd2ss xmm5,xmm0
// ---------- INJECTING HERE ----------
1D62A209F3B: F3 0F 11 A8 A4 00 00 00        - movss [rax+000000A4],xmm5
// ---------- DONE INJECTING  ----------
1D62A209F43: 48 C7 46 18 00 00 00 00        - mov qword ptr [rsi+18],00000000
1D62A209F4B: 0F B6 46 28                    - movzx eax,byte ptr [rsi+28]
1D62A209F4F: 85 C0                          - test eax,eax
1D62A209F51: 0F 85 2D 01 00 00              - jne 1D62A20A084
1D62A209F57: C7 46 2C 01 00 00 00           - mov [rsi+2C],00000001
1D62A209F5E: E9 21 01 00 00                 - jmp 1D62A20A084
1D62A209F63: 48 8B 46 10                    - mov rax,[rsi+10]
1D62A209F67: F3 0F 10 80 A4 00 00 00        - movss xmm0,[rax+000000A4]
1D62A209F6F: F3 0F 5A C0                    - cvtss2sd xmm0,xmm0
1D62A209F73: 66 0F 57 C9                    - xorpd xmm1,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>15</ID>
      <Description>"NO FALL DMG"</Description>
      <LastState/>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>{ Game   : Eliminator ver 1.2.exe
  Version: 
  Date   : 2025-01-13
  Author : Miuzarte

  This script does blah blah blah
}

[ENABLE]

aobscan(INJECT,F3 0F 11 A8 A4 00 00 00 48 C7) // should be unique
alloc(newmem,$1000,INJECT)

label(code)
label(return)

newmem:
  jmp return

code:
  movss [rax+000000A4],xmm5
  jmp return

INJECT:
  jmp newmem
  nop 3
return:
registersymbol(INJECT)

[DISABLE]

INJECT:
  db F3 0F 11 A8 A4 00 00 00

unregistersymbol(INJECT)
dealloc(newmem)

{
// ORIGINAL CODE - INJECTION POINT: 173A883DE4B

173A883DE1E: F2 0F 5A D2                    - cvtsd2ss xmm2,xmm2
173A883DE22: F2 0F 5A C9                    - cvtsd2ss xmm1,xmm1
173A883DE26: F2 0F 5A C0                    - cvtsd2ss xmm0,xmm0
173A883DE2A: 48 83 EC 20                    - sub rsp,20
173A883DE2E: 49 BB 40 73 52 89 73 01 00 00  - mov r11,0000017389527340
173A883DE38: 41 FF D3                       - call r11
173A883DE3B: 48 83 C4 20                    - add rsp,20
173A883DE3F: F3 0F 5A C0                    - cvtss2sd xmm0,xmm0
173A883DE43: 48 8B 45 E8                    - mov rax,[rbp-18]
173A883DE47: F2 0F 5A E8                    - cvtsd2ss xmm5,xmm0
// ---------- INJECTING HERE ----------
173A883DE4B: F3 0F 11 A8 A4 00 00 00        - movss [rax+000000A4],xmm5
// ---------- DONE INJECTING  ----------
173A883DE53: 48 C7 46 18 00 00 00 00        - mov qword ptr [rsi+18],00000000
173A883DE5B: 0F B6 46 28                    - movzx eax,byte ptr [rsi+28]
173A883DE5F: 85 C0                          - test eax,eax
173A883DE61: 0F 85 2D 01 00 00              - jne 173A883DF94
173A883DE67: C7 46 2C 01 00 00 00           - mov [rsi+2C],00000001
173A883DE6E: E9 21 01 00 00                 - jmp 173A883DF94
173A883DE73: 48 8B 46 10                    - mov rax,[rsi+10]
173A883DE77: F3 0F 10 80 A4 00 00 00        - movss xmm0,[rax+000000A4]
173A883DE7F: F3 0F 5A C0                    - cvtss2sd xmm0,xmm0
173A883DE83: 66 0F 57 C9                    - xorpd xmm1,xmm1
}
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>8</ID>
      <Description>"HP"</Description>
      <VariableType>Float</VariableType>
      <Address>"UnityPlayer.dll"+01506C68</Address>
      <Offsets>
        <Offset>A4</Offset>
        <Offset>28</Offset>
        <Offset>120</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>9</ID>
      <Description>"WATER"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>"UnityPlayer.dll"+01506C68</Address>
      <Offsets>
        <Offset>A8</Offset>
        <Offset>28</Offset>
        <Offset>120</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
    <CheatEntry>
      <ID>10</ID>
      <Description>"HUNGER"</Description>
      <ShowAsSigned>0</ShowAsSigned>
      <VariableType>Float</VariableType>
      <Address>"UnityPlayer.dll"+01506C68</Address>
      <Offsets>
        <Offset>AC</Offset>
        <Offset>28</Offset>
        <Offset>120</Offset>
        <Offset>8</Offset>
      </Offsets>
    </CheatEntry>
  </CheatEntries>
  <CheatCodes>
    <CodeEntry>
      <Description>改的变 mov [rax+1C],ecx</Description>
      <AddressString>1E923A2FA2F</AddressString>
      <Before>
        <Byte>63</Byte>
        <Byte>49</Byte>
        <Byte>1C</Byte>
        <Byte>FF</Byte>
        <Byte>C9</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>1C</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>68</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 movss [rax+000000A4],xmm5</Description>
      <AddressString>1CC049F254B</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>A8</Byte>
        <Byte>A4</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 movss [rsi+000000AC],xmm5</Description>
      <AddressString>1CC049A8340</AddressString>
      <Before>
        <Byte>C0</Byte>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>AE</Byte>
        <Byte>AC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>10</Byte>
        <Byte>86</Byte>
        <Byte>CC</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 movss [rax+000000A8],xmm5</Description>
      <AddressString>1CD088E715B</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>A8</Byte>
        <Byte>A8</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 movss [rax+000000AC],xmm5</Description>
      <AddressString>1CD088FA0BB</AddressString>
      <Before>
        <Byte>E8</Byte>
        <Byte>F2</Byte>
        <Byte>0F</Byte>
        <Byte>5A</Byte>
        <Byte>E8</Byte>
      </Before>
      <Actual>
        <Byte>F3</Byte>
        <Byte>0F</Byte>
        <Byte>11</Byte>
        <Byte>A8</Byte>
        <Byte>AC</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>C7</Byte>
        <Byte>46</Byte>
        <Byte>18</Byte>
        <Byte>00</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 mov [rax+000001B0],ecx</Description>
      <AddressString>288C07EA953</AddressString>
      <Before>
        <Byte>E9</Byte>
        <Byte>E8</Byte>
        <Byte>03</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>88</Byte>
        <Byte>B0</Byte>
        <Byte>01</Byte>
        <Byte>00</Byte>
        <Byte>00</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>28</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
    <CodeEntry>
      <Description>改的变 mov [rax+28],ecx</Description>
      <AddressString>288AC9114E0</AddressString>
      <Before>
        <Byte>63</Byte>
        <Byte>49</Byte>
        <Byte>28</Byte>
        <Byte>2B</Byte>
        <Byte>CF</Byte>
      </Before>
      <Actual>
        <Byte>89</Byte>
        <Byte>48</Byte>
        <Byte>28</Byte>
      </Actual>
      <After>
        <Byte>48</Byte>
        <Byte>8B</Byte>
        <Byte>46</Byte>
        <Byte>78</Byte>
        <Byte>48</Byte>
      </After>
    </CodeEntry>
  </CheatCodes>
  <UserdefinedSymbols/>
  <Comments>关于表格信息:
</Comments>
</CheatTable>
